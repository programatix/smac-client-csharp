/*
 * SMAC API
 *
 * SMAC ASP.NET Core Web API
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing PayloadsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PayloadsApiTests : IDisposable
    {
        private PayloadsApi instance;

        public PayloadsApiTests()
        {
            instance = new PayloadsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PayloadsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PayloadsApi
            //Assert.IsType<PayloadsApi>(instance);
        }

        /// <summary>
        /// Test ApiPayloadsGet
        /// </summary>
        [Fact]
        public void ApiPayloadsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? pageSize = null;
            //string sortOrder = null;
            //string searchText = null;
            //string filter = null;
            //var response = instance.ApiPayloadsGet(pageNumber, pageSize, sortOrder, searchText, filter);
            //Assert.IsType<PayloadResponsePaginatedResponse>(response);
        }

        /// <summary>
        /// Test ApiPayloadsIdDelete
        /// </summary>
        [Fact]
        public void ApiPayloadsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiPayloadsIdDelete(id);
        }

        /// <summary>
        /// Test ApiPayloadsIdGet
        /// </summary>
        [Fact]
        public void ApiPayloadsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiPayloadsIdGet(id);
            //Assert.IsType<PayloadResponse>(response);
        }

        /// <summary>
        /// Test ApiPayloadsIdPut
        /// </summary>
        [Fact]
        public void ApiPayloadsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiPayloadsIdDeleteRequest apiPayloadsIdDeleteRequest = null;
            //instance.ApiPayloadsIdPut(id, apiPayloadsIdDeleteRequest);
        }

        /// <summary>
        /// Test ApiPayloadsPost
        /// </summary>
        [Fact]
        public void ApiPayloadsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PayloadPostRequest payloadPostRequest = null;
            //var response = instance.ApiPayloadsPost(payloadPostRequest);
            //Assert.IsType<PayloadResponse>(response);
        }
    }
}
