/*
 * SMAC API
 *
 * SMAC ASP.NET Core Web API
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing RulesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RulesApiTests : IDisposable
    {
        private RulesApi instance;

        public RulesApiTests()
        {
            instance = new RulesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RulesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RulesApi
            //Assert.IsType<RulesApi>(instance);
        }

        /// <summary>
        /// Test ApiRulesGet
        /// </summary>
        [Fact]
        public void ApiRulesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? pageSize = null;
            //string sortOrder = null;
            //string searchText = null;
            //string filter = null;
            //var response = instance.ApiRulesGet(pageNumber, pageSize, sortOrder, searchText, filter);
            //Assert.IsType<RuleResponsePaginatedResponse>(response);
        }

        /// <summary>
        /// Test ApiRulesIdDelete
        /// </summary>
        [Fact]
        public void ApiRulesIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiRulesIdDelete(id);
        }

        /// <summary>
        /// Test ApiRulesIdGet
        /// </summary>
        [Fact]
        public void ApiRulesIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiRulesIdGet(id);
            //Assert.IsType<RuleResponse>(response);
        }

        /// <summary>
        /// Test ApiRulesIdPut
        /// </summary>
        [Fact]
        public void ApiRulesIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiRulesIdDeleteRequest apiRulesIdDeleteRequest = null;
            //instance.ApiRulesIdPut(id, apiRulesIdDeleteRequest);
        }

        /// <summary>
        /// Test ApiRulesPost
        /// </summary>
        [Fact]
        public void ApiRulesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RulePostRequest rulePostRequest = null;
            //var response = instance.ApiRulesPost(rulePostRequest);
            //Assert.IsType<RuleResponse>(response);
        }
    }
}
