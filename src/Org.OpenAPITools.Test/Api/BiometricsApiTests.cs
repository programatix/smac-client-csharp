/*
 * SMAC API
 *
 * SMAC ASP.NET Core Web API
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BiometricsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BiometricsApiTests : IDisposable
    {
        private BiometricsApi instance;

        public BiometricsApiTests()
        {
            instance = new BiometricsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BiometricsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BiometricsApi
            //Assert.IsType<BiometricsApi>(instance);
        }

        /// <summary>
        /// Test ApiBiometricsFacePhotoPost
        /// </summary>
        [Fact]
        public void ApiBiometricsFacePhotoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FacePhotoRequest facePhotoRequest = null;
            //var response = instance.ApiBiometricsFacePhotoPost(facePhotoRequest);
            //Assert.IsType<FacePhotoResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsCropFacePost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsCropFacePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CropRequest cropRequest = null;
            //var response = instance.ApiBiometricsUtilsCropFacePost(cropRequest);
            //Assert.IsType<CropResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsExtractFacePost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsExtractFacePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExtractRequest extractRequest = null;
            //var response = instance.ApiBiometricsUtilsExtractFacePost(extractRequest);
            //Assert.IsType<ExtractResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsExtractFingerPost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsExtractFingerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExtractRequest extractRequest = null;
            //var response = instance.ApiBiometricsUtilsExtractFingerPost(extractRequest);
            //Assert.IsType<ExtractResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsExtractIrisPost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsExtractIrisPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExtractRequest extractRequest = null;
            //var response = instance.ApiBiometricsUtilsExtractIrisPost(extractRequest);
            //Assert.IsType<ExtractResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsVerifyFacePost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsVerifyFacePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VerifyRequest verifyRequest = null;
            //var response = instance.ApiBiometricsUtilsVerifyFacePost(verifyRequest);
            //Assert.IsType<VerifyResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsVerifyFingerPost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsVerifyFingerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VerifyRequest verifyRequest = null;
            //var response = instance.ApiBiometricsUtilsVerifyFingerPost(verifyRequest);
            //Assert.IsType<VerifyResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsUtilsVerifyIrisPost
        /// </summary>
        [Fact]
        public void ApiBiometricsUtilsVerifyIrisPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VerifyRequest verifyRequest = null;
            //var response = instance.ApiBiometricsUtilsVerifyIrisPost(verifyRequest);
            //Assert.IsType<VerifyResponse>(response);
        }

        /// <summary>
        /// Test ApiBiometricsVerifyFacePost
        /// </summary>
        [Fact]
        public void ApiBiometricsVerifyFacePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userId = null;
            //List<FaceTypesVerifyContent> contents = null;
            //var response = instance.ApiBiometricsVerifyFacePost(userId, contents);
            //Assert.IsType<List<VerifyResponse>>(response);
        }

        /// <summary>
        /// Test ApiBiometricsVerifyFingerPost
        /// </summary>
        [Fact]
        public void ApiBiometricsVerifyFingerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userId = null;
            //List<FingerTypesVerifyContent> contents = null;
            //var response = instance.ApiBiometricsVerifyFingerPost(userId, contents);
            //Assert.IsType<List<VerifyResponse>>(response);
        }

        /// <summary>
        /// Test ApiBiometricsVerifyIrisPost
        /// </summary>
        [Fact]
        public void ApiBiometricsVerifyIrisPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userId = null;
            //List<IrisTypesVerifyContent> contents = null;
            //var response = instance.ApiBiometricsVerifyIrisPost(userId, contents);
            //Assert.IsType<List<VerifyResponse>>(response);
        }
    }
}
